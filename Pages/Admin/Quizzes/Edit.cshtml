@page "{id:int}"
@model QuizApp.Pages.Admin.Quizzes.EditModel
@{
    ViewData["Title"] = "Edit Quiz";
}

<h1>@ViewData["Title"]</h1>

<form method="post">
    <input type="hidden" asp-for="Input.Id" />
    
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="mb-3">
                <label asp-for="Input.Title" class="form-label">Quiz Title</label>
                <input asp-for="Input.Title" class="form-control" />
                <span asp-validation-for="Input.Title" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Input.Description" class="form-label">Description</label>
                <textarea asp-for="Input.Description" class="form-control" rows="3"></textarea>
                <span asp-validation-for="Input.Description" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Input.TimeLimit" class="form-label">Time Limit (minutes)</label>
                <input asp-for="Input.TimeLimit" class="form-control" type="number" min="1" max="120" />
                <span asp-validation-for="Input.TimeLimit" class="text-danger"></span>
            </div>
        </div>
    </div>

    <h3>Questions</h3>
    <div id="questions-container">
        @for (var i = 0; i < Model.Input.Questions.Count; i++)
        {
            <div class="card mb-4 question-card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5>Question @(i + 1)</h5>
                    <input type="hidden" asp-for="Input.Questions[i].Id" />
                    <button type="button" class="btn btn-sm btn-danger remove-question">Remove</button>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label">Question Text</label>
                        <input asp-for="Input.Questions[i].Text" class="form-control" />
                        <span asp-validation-for="Input.Questions[i].Text" class="text-danger"></span>
                    </div>

                    <div class="options-container">
                        @for (var j = 0; j < Model.Input.Questions[i].Options.Count; j++)
                        {
                            <div class="mb-3 option-group">
                                <div class="input-group">
                                    <div class="input-group-text">
                                        <input type="radio" 
                                               name="Input.Questions[@i].CorrectOptionIndex" 
                                               value="@j" 
                                               class="form-check-input mt-0" 
                                               checked="@Model.Input.Questions[i].Options[j].IsCorrect" />
                                    </div>
                                    <input type="hidden" asp-for="Input.Questions[i].Options[j].Id" />
                                    <input asp-for="Input.Questions[i].Options[j].Text" class="form-control" placeholder="Option @(j + 1)" />
                                    @if (j > 1)
                                    {
                                        <button type="button" class="btn btn-outline-danger remove-option">X</button>
                                    }
                                </div>
                                <span asp-validation-for="Input.Questions[i].Options[j].Text" class="text-danger"></span>
                            </div>
                        }
                    </div>

                    <button type="button" class="btn btn-sm btn-secondary add-option">Add Option</button>
                </div>
            </div>
        }
    </div>

    <button type="button" id="add-question" class="btn btn-secondary mb-4">Add Question</button>

    <div>
        <button type="submit" class="btn btn-primary">Save Changes</button>
        <a asp-page="./Index" class="btn btn-secondary">Cancel</a>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Client-side dynamic form handling
        $(document).ready(function() {
            // Add question
            $("#add-question").click(function() {
                const questionIndex = $(".question-card").length;
                const questionHtml = `
                    <div class="card mb-4 question-card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5>Question ${questionIndex + 1}</h5>
                            <input type="hidden" name="Input.Questions[${questionIndex}].Id" value="0" />
                            <button type="button" class="btn btn-sm btn-danger remove-question">Remove</button>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <label class="form-label">Question Text</label>
                                <input name="Input.Questions[${questionIndex}].Text" class="form-control" />
                                <span class="text-danger" data-valmsg-for="Input.Questions[${questionIndex}].Text"></span>
                            </div>

                            <div class="options-container">
                                <div class="mb-3 option-group">
                                    <div class="input-group">
                                        <div class="input-group-text">
                                            <input type="radio" name="Input.Questions[${questionIndex}].CorrectOptionIndex" value="0" class="form-check-input mt-0" checked />
                                        </div>
                                        <input type="hidden" name="Input.Questions[${questionIndex}].Options[0].Id" value="0" />
                                        <input name="Input.Questions[${questionIndex}].Options[0].Text" class="form-control" placeholder="Option 1" />
                                    </div>
                                    <span class="text-danger" data-valmsg-for="Input.Questions[${questionIndex}].Options[0].Text"></span>
                                </div>
                                <div class="mb-3 option-group">
                                    <div class="input-group">
                                        <div class="input-group-text">
                                            <input type="radio" name="Input.Questions[${questionIndex}].CorrectOptionIndex" value="1" class="form-check-input mt-0" />
                                        </div>
                                        <input type="hidden" name="Input.Questions[${questionIndex}].Options[1].Id" value="0" />
                                        <input name="Input.Questions[${questionIndex}].Options[1].Text" class="form-control" placeholder="Option 2" />
                                    </div>
                                    <span class="text-danger" data-valmsg-for="Input.Questions[${questionIndex}].Options[1].Text"></span>
                                </div>
                            </div>

                            <button type="button" class="btn btn-sm btn-secondary add-option">Add Option</button>
                        </div>
                    </div>
                `;

                $("#questions-container").append(questionHtml);
            });

            // Remove question
            $(document).on("click", ".remove-question", function() {
                $(this).closest(".question-card").remove();

                // Update question numbering
                $(".question-card").each(function(index) {
                    $(this).find("h5").text(`Question ${index + 1}`);

                    // Update input names
                    $(this).find("input, textarea").each(function() {
                        let name = $(this).attr("name");
                        if (name) {
                            name = name.replace(/Questions\[\d+\]/, `Questions[${index}]`);
                            $(this).attr("name", name);
                        }
                    });
                });
            });

            // Add option
            $(document).on("click", ".add-option", function() {
                const questionCard = $(this).closest(".question-card");
                const questionIndex = $(".question-card").index(questionCard);
                const optionCount = questionCard.find(".option-group").length;

                const optionHtml = `
                    <div class="mb-3 option-group">
                        <div class="input-group">
                            <div class="input-group-text">
                                <input type="radio" name="Input.Questions[${questionIndex}].CorrectOptionIndex" value="${optionCount}" class="form-check-input mt-0" />
                            </div>
                            <input type="hidden" name="Input.Questions[${questionIndex}].Options[${optionCount}].Id" value="0" />
                            <input name="Input.Questions[${questionIndex}].Options[${optionCount}].Text" class="form-control" placeholder="Option ${optionCount + 1}" />
                            <button type="button" class="btn btn-outline-danger remove-option">X</button>
                        </div>
                        <span class="text-danger" data-valmsg-for="Input.Questions[${questionIndex}].Options[${optionCount}].Text"></span>
                    </div>
                `;

                questionCard.find(".options-container").append(optionHtml);
            });

            // Remove option
            $(document).on("click", ".remove-option", function() {
                const optionGroup = $(this).closest(".option-group");
                const questionCard = $(this).closest(".question-card");
                const questionIndex = $(".question-card").index(questionCard);

                optionGroup.remove();

                // Update option numbering and input names
                questionCard.find(".option-group").each(function(optionIndex) {
                    $(this).find("input[type='radio']").val(optionIndex);

                    const optionInput = $(this).find("input.form-control");
                    let name = optionInput.attr("name");
                    if (name) {
                        name = name.replace(/Options\[\d+\]/, `Options[${optionIndex}]`);
                        optionInput.attr("name", name);
                        optionInput.attr("placeholder", `Option ${optionIndex + 1}`);
                    }
                });
            });
        });
    </script>
}